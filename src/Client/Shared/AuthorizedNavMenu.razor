@inject ApiClient Api
@inject TeamsSource TeamsSource
@implements IDisposable

<MudDivider Class="my-2" />
<MudNavLink Href="raids" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.CalendarToday">Raid Calendar</MudNavLink>
<MudNavLink Href="characters" Icon="@Icons.Material.Filled.Person">Characters</MudNavLink>

<AuthorizeView Policy="@AppPolicies.Administrator">
    <MudNavGroup Title="Admin Tools" Icon="@Icons.Material.Filled.AdminPanelSettings">
        <MudNavLink Href="admin/audit">Raid Audit</MudNavLink>
        <MudNavLink Href="admin/donations">Donations</MudNavLink>
    </MudNavGroup>
</AuthorizeView>

<MudNavLink Href="teams" Match="NavLinkMatch.All">All Teams</MudNavLink>

<MudNavGroup Title="25-Man Teams" Expanded Icon="@Icons.Material.Filled.PeopleAlt">
    @foreach (var team in TeamsSource.GetTeams(25))
    {
        <MudNavLink Href="@("teams/" + team.Name)">@team.Name</MudNavLink>
    }
</MudNavGroup>

<MudNavGroup Title="10-Man Teams" Expanded Icon="@Icons.Material.Filled.PeopleAlt">
    @foreach (var team in TeamsSource.GetTeams(10))
    {
        <MudNavLink Href="@("teams/" + team.Name)">@team.Name</MudNavLink>
    }
</MudNavGroup>

@code {
    protected override void OnInitialized()
    {
        TeamsSource.Updated += StateHasChanged;
        TeamsSource.EnsureStarted(Api);
    }

    public void Dispose() => TeamsSource.Updated -= StateHasChanged;
}