@inject ApiClient Api
@inject IJSRuntime JS
@inject ISnackbar Snackbar

<MudDialog DisableSidePadding="true">
    <TitleContent>
        Export Standings
    </TitleContent>
    <DialogContent>
        <MudTextField T="string"
                      Value="Code"
                      ReadOnly
                      FullWidth
                      Label="Export Code"
                      Variant="Variant.Filled" />
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="CopyExportAsync" Variant="Variant.Filled" Color="Color.Primary">Copy Code</MudButton>
        <MudButton OnClick="() => Dialog.Cancel()" Variant="Variant.Text">Close</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance Dialog { get; set; } = null!;

    [Parameter] public string Code { get; set; } = null!;

    protected override void OnInitialized()
    {
        if (Dialog is null) throw new ArgumentNullException(nameof(Dialog));
        if (Code is null) throw new ArgumentNullException(nameof(Code));
    }

    private async Task CopyExportAsync()
    {
        if (await JS.InvokeAsync<bool>("copyManager.copy", Code))
        {
            Snackbar.Add("Copied!", Severity.Success);
        }
        else
        {
            Snackbar.Add("Couldn't copy text.", Severity.Error);
        }
    }
}
