@inject ApiClient Api
@inject IDialogService DialogService
@inject ISnackbar Snackbar

<MudExpansionPanels Elevation="5" Dense="true" Class="mt-3">
    @foreach (var m in Team.Roster
        .OrderBy(m => m.Bench)
        .ThenBy(m => (int?)(m.LootLists.FirstOrDefault(l => l.Phase == _phase)?.MainSpec.GetRole()) ?? int.MaxValue)
        .ThenBy(m => m.Character.Name))
    {
        var member = m;
        var selected = member.Character.Id == _selectedMemberId;
        var phaseLootList = member.LootLists.Find(ll => ll.Phase == _phase);
        <MudExpansionPanelEx DenseHeader="true" IsExpanded="selected" IsExpandedChanged="expanded => _selectedMemberId = expanded ? member.Character.Id : null" @key="member.Character.Id">
            <TitleContent>
                <div class="d-flex align-center">
                    <PlayerIcon Race="member.Character.Race"
                                PlayerClass="member.Character.Class"
                                Spec="phaseLootList?.MainSpec ?? Specializations.None"
                                ShowTooltip="true"
                                Class="mr-5 mb-1" />
                    <div class="d-flex align-baseline">
                        <MudText Inline Class="mr-2" Typo="Typo.h5">@member.Character.Name</MudText>
                        <MudText Inline Class="mr-2" Typo="Typo.caption">@member.Character.Race.GetDisplayName() @member.Character.Class.GetDisplayName()</MudText>
                        @if (member.Bench)
                        {
                            <MudText Inline Color="Color.Primary" Typo="Typo.caption" Class="mr-2">Bench</MudText>
                        }
                        @if (member.Status != RaidMemberStatus.Member)
                        {
                            <MudText Inline Color="Color.Warning" Typo="Typo.caption" Class="mr-2">Trial</MudText>
                        }
                        @if (phaseLootList is null || phaseLootList.Approved == false || phaseLootList.Status != LootListStatus.Locked || !member.Character.Verified)
                        {
                            <MudTooltip>
                                <TooltipContent>
                                    @if (phaseLootList is null)
                                    {
                                        <p>No loot list for this phase!</p>
                                    }
                                    else if (phaseLootList.Approved == false)
                                    {
                                        <p>Loot list has not been approved yet!</p>
                                    }
                                    else if (phaseLootList.Status != LootListStatus.Locked)
                                    {
                                        <p>Loot list has not been locked yet!</p>
                                    }
                                    @if (!member.Character.Verified)
                                    {
                                        <p>Character ownership has not been verified!</p>
                                        <p>Have an officer verify the owner of this character.</p>
                                    }
                                </TooltipContent>
                                <ChildContent>
                                    <MudIcon Color="Color.Warning" Icon="@Icons.Material.Filled.Warning" Class="mr-2" />
                                </ChildContent>
                            </MudTooltip>
                        }
                        @if (Team.Size != 10)
                        {
                            @if (!member.Enchanted)
                            {
                                <MudTooltip Text="Gem & enchant bonus is not active">
                                    <MudIcon Color="Color.Warning" Icon="@CustomIcons.Diamond" Class="mr-2" />
                                </MudTooltip>
                            }
                            @if (member is not { Prepared: true })
                            {
                                <MudTooltip Text="Prepared bonus is not active">
                                    <MudIcon Color="Color.Warning" Icon="@CustomIcons.Illidan" Class="mr-2" />
                                </MudTooltip>
                            }
                            @if (member.Donations.NextMonth < member.Donations.Maximum)
                            {
                                <MudTooltip>
                                    <TooltipContent>
                                        Completed @member.Donations.NextMonth of @member.Donations.Maximum donations for next month.
                                    </TooltipContent>
                                    <ChildContent>
                                        <MudIcon Color="member.Donations.NextMonth == 0 ? Color.Warning : Color.Info" Icon="@CustomIcons.HandCoin" Class="mr-2" />
                                    </ChildContent>
                                </MudTooltip>
                            }
                        }
                    </div>
                </div>
            </TitleContent>
            <ChildContent>
                <MemberView Team="Team" Member="member" Phase="_phase" MemberUpdated="StateHasChanged" />
            </ChildContent>
        </MudExpansionPanelEx>
    }
</MudExpansionPanels>

@code {
    private byte _phase;
    private long? _selectedMemberId;

    [Parameter] public TeamDto Team { get; set; } = null!;
    [Parameter] public string? SelectedMemberName { get; set; }
    [Parameter] public byte? SelectedPhase { get; set; }
    [Parameter] public byte CurrentPhase { get; set; }
    [Parameter] public EventCallback OnRefreshClicked { get; set; }

    protected override void OnParametersSet()
    {
        if (Team is null) throw new ArgumentNullException(nameof(Team));
        _phase = SelectedPhase ?? CurrentPhase;
    }
}