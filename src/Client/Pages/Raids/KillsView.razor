@inject ApiClient Api
@inject IDialogService DialogService

@foreach (var kill in Raid.Kills)
{
    var localKill = kill;
    <div class="card my-4 shadow">
        <div class="card-body">
            <div class="card-title">@kill.EncounterName</div>
            <div class="card-subtitle text-muted">
                Killed by: @string.Join(", ", kill.Characters.Select(id => Raid.Attendees.Find(a => a.Id == id)?.Name).Where(str => str?.Length > 0).OrderBy(str => str))
            </div>
            <div class="card-subtitle text-muted mb-2">Recorded at @kill.KilledAt.ToOffset(TimeZoneInfo.Local.GetUtcOffset(DateTime.Now)).ToString("t", CultureInfo.CurrentCulture)</div>
            @if (kill.Drops.All(drop => drop.WinnerId is null))
            {
                var encounterId = kill.EncounterId;
                <button type="button" class="btn btn-danger" @onclick="() => DeleteAsync(encounterId)">
                    Delete
                </button>
            }
        </div>
        <div class="list-group list-group-flush">
            @foreach (var drop in kill.Drops)
            {
                var localDrop = drop;
                <div class="list-group-item list-group-item-action d-flex justify-content-between align-items-center @(drop.WinnerId is null ? "text-danger" : "text-success")">
                    <div>
                        <div>
                            <ItemLink LinkEnabled="true" Id="drop.ItemId" Colorize="true" Bracketize="true" OverrideText="@drop.ItemName" />
                        </div>
                        <div>Awarded to @(drop.WinnerName ?? "nobody").</div>
                    </div>
                    <AuthorizeView Roles="@AppRoles.LootMaster">
                        @if (drop.WinnerId is null)
                        {
                            <button type="button" class="btn btn-sm btn-primary" @onclick="() => BeginAssignAsync(localDrop)">
                                Assign
                            </button>
                        }
                        else
                        {
                            <button type="button" class="btn btn-sm btn-danger" @onclick="() => AssignAsync(localDrop, null)">Unassign</button>
                        }
                    </AuthorizeView>
                </div>
            }
        </div>
    </div>
}

<AuthorizeView Roles="@AppRoles.LootMaster" Context="authContext">
    <button class="btn btn-success btn-lg shadow my-4" type="button" @onclick="AddClickedAsync">
        <span class="fas fa-plus" aria-hidden="true"></span>
        <span>Add Kill</span>
    </button>
</AuthorizeView>

@code {
    [Parameter] public RaidDto Raid { get; set; } = null!;
    [CascadingParameter] public IErrorHandler? ErrorHandler { get; set; }
}
