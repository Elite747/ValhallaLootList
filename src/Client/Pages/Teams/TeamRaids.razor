@inject ApiClient Api
@inject IDialogService DialogService

<MudCard Elevation="5" Class="mt-3">
    <ApiExecutor Operation="() => Api.Raids.GetRecentForTeam(Team.Id)" Context="raids" @ref="_executor">
        <MudList Clickable="true">
            <AuthorizeView Policy="@AppPolicies.LootMaster" Resource="@Team.Id">
                <MudListItem Icon="@Icons.Material.Filled.AddCircle" IconColor="Color.Success" Text="Start New Raid" OnClick="StartRaid" />
            </AuthorizeView>

            @foreach (var raid in raids.OrderByDescending(r => r.StartedAt))
            {
                <MudListItem Href="@("raids/" + raid.Id)" @key="raid.Id">
                    <DateTimeDisplay Date="raid.StartedAt" Format="D" />
                </MudListItem>
            }
        </MudList>
    </ApiExecutor>
</MudCard>

@code {
    private IApiExecutor? _executor;

    [Parameter] public TeamDto Team { get; set; } = null!;
    [Parameter] public byte Phase { get; set; }

    protected override void OnParametersSet()
    {
        if (Team is null) throw new ArgumentNullException(nameof(Team));
    }

    private void StartRaid()
    {
        DialogService.Show<StartRaidWizard>("Start Raid", parameters: new() { [nameof(StartRaidWizard.Team)] = Team, [nameof(StartRaidWizard.Phase)] = Phase });
    }

    public Task RefreshAsync() => _executor?.RestartAsync() ?? Task.CompletedTask;
}
