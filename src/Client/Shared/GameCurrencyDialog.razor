@inject IDialogService DialogService
@inject UserTimeProvider TimeProvider

<MudDialog>
    <DialogContent>
        <EditForm OnValidSubmit="() => Dialog.Close(DialogResult.Ok(_model))" Model="_model" id="currencyForm">
            <DataAnnotationsValidator />
            <MudGrid Spacing="0">
                <MudItem xs="12" sm="4">
                    <MudTextField @bind-Value="_model.Gold" For="() => _model.Gold" Variant="Variant.Filled" Label="Gold" Immediate="true" />
                </MudItem>
                <MudItem xs="12" sm="4">
                    <MudTextField @bind-Value="_model.Silver" For="() => _model.Silver" Variant="Variant.Filled" Label="Silver" Immediate="true" Class="mx-sm-3" />
                </MudItem>
                <MudItem xs="12" sm="4">
                    <MudTextField @bind-Value="_model.Copper" For="() => _model.Copper" Variant="Variant.Filled" Label="Copper" Immediate="true" />
                </MudItem>
                @if (AllowCurrentMonth && TimeProvider.ServerNow.Day <= 7)
                {
                    <MudItem xs="12">
                        <MudSwitch @bind-Checked="_model.ApplyThisMonth" Color="Color.Primary" Label="Apply Donation to This Month" />
                    </MudItem>
                }
            </MudGrid>
        </EditForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="() => Dialog.Cancel()" Variant="Variant.Text">Cancel</MudButton>
        <MudButton ButtonType="ButtonType.Submit" Disabled="_model.GetAmount() == 0" Color="Color.Primary" Variant="Variant.Filled" form="currencyForm">Ok</MudButton>
    </DialogActions>
</MudDialog>

@code {
    private readonly GameCurrencyResult _model = new();

    [CascadingParameter] MudDialogInstance Dialog { get; set; } = null!;
    [Parameter] public bool AllowCurrentMonth { get; set; }

    protected override void OnParametersSet()
    {
        if (Dialog is null) throw new ArgumentNullException(nameof(Dialog));
    }
}