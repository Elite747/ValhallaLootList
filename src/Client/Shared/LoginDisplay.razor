@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication

@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager

<AuthorizeView>
    <Authorized>
        <div class="align-text-bottom">
            @{
                var username = context.User.Identity?.Name;
                var discordName = context.User.GetDiscordUsername();
            }
            @if (username != discordName)
            {
                @username
            }
            else
            {
                @discordName<span class="font-weight-light text-muted">#@context.User.GetDiscordDiscriminator()</span>
            }
            &nbsp;
            <img src="@context.User.GetDiscordAvatarUrl()" class="rounded-circle img-thumbnail img-fluid" width="48" height="48" />
        </div>
        <button class="nav-link btn btn-link" @onclick="BeginSignOut">Log out</button>
    </Authorized>
    <NotAuthorized>
        <a href="authentication/login?returnUrl=@Navigation.Uri">Log in</a>
    </NotAuthorized>
</AuthorizeView>

@code{
    private async Task BeginSignOut(MouseEventArgs args)
    {
        await SignOutManager.SetSignOutState();
        Navigation.NavigateTo("authentication/logout");
    }
}
