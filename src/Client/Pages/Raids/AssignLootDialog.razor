@inject ApiClient Api

<MudDialogScrollFix />
<MudDialog DisableSidePadding="true">
    <DialogContent>
        <ApiExecutor Operation="() => Api.Drops.GetPriorityRankings(Drop.Id)" Context="prios">
            <MudList Clickable="true" Dense="true">
                @foreach (var prioGroup in prios.OrderByDescending(e => e.Priority ?? int.MinValue).GroupBy(e => e.Priority))
                {
                    var tied = prioGroup.Key.HasValue && prioGroup.Count() > 1;
                    foreach (var entry in prioGroup.OrderBy(e => e.IsError).ThenBy(e => e.CharacterName))
                    {
                        <AssignLootDialogRow Entry="entry" Tied="tied" />
                    }
                }
            </MudList>
        </ApiExecutor>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="() => Dialog.Cancel()" Variant="Variant.Text">Cancel</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance Dialog { get; set; } = null!;

    [Parameter] public EncounterDropDto Drop { get; set; } = null!;

    [Parameter] public RaidDto Raid { get; set; } = null!;

    protected override void OnParametersSet()
    {
        if (Dialog is null) throw new ArgumentNullException(nameof(Dialog));
        if (Drop is null) throw new ArgumentNullException(nameof(Drop));
        if (Raid is null) throw new ArgumentNullException(nameof(Raid));
    }
}