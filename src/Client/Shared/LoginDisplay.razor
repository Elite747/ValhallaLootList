@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication

@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager

<AuthorizeView>
    <Authorized>
        <MudHidden Breakpoint="Breakpoint.Xs">
            @{
                var username = context.User.Identity?.Name;
                var discordName = context.User.GetDiscordUsername();
            }
            @if (username != discordName)
            {
                @username
            }
            else
            {
                @discordName<span class="mud-text-secondary">#@context.User.GetDiscordDiscriminator()</span>
            }
        </MudHidden>
        <MudAvatar Class="mx-1" Color="Color.Transparent">
            <GuildMemberAvatar Id="context.User.GetDiscordIdFromClient()"
                               AvatarHash="@context.User.GetDiscordAvatarHash()"
                               Discriminator="context.User.GetDiscordDiscriminator()"
                               Size="40" />
        </MudAvatar>
    </Authorized>
    <NotAuthorized>
        <MudButton OnClick="SignIn" Variant="Variant.Text" Color="Color.Inherit">Log in</MudButton>
    </NotAuthorized>
</AuthorizeView>

@code{

    private void SignIn()
    {
        Navigation.NavigateTo("authentication/login?returnUrl=" + Navigation.Uri);
    }
}
