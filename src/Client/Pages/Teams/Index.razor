@page "/teams"
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@inject ApiClient Api

<h1>Raid Teams</h1>

<button class="btn btn-primary mr-sm-2 mb-2" type="button" @onclick="RefreshAsync">
    <span class="fas fa-sync" aria-hidden="true"></span>
    <span class="sr-only">Refresh</span>
</button>


@if (_teams is null)
{
    <LoadingIndicator />
}
else
{
    <AuthorizeView Roles="@AppRoles.Administrator">
        <Modal @ref="_createModal">
            @if (_createRequested)
            {
                <ModalBackdrop />
                <Create ParentModal="_createModal" />
            }
        </Modal>
        <button type="button" class="btn btn-primary mb-2" @onclick="CreateClicked">Create Team</button>
    </AuthorizeView>

    <div class="list-group">
        @foreach (var team in _teams)
        {
            <a class="list-group-item" href="teams/@team">@team</a>
        }
    </div>
}

@code {
    private Modal? _createModal;
    private bool _createRequested;
    private string[]? _teams;
    private string _searchText = string.Empty;

    protected override Task OnInitializedAsync()
    {
        return RefreshAsync();
    }

    private async Task RefreshAsync()
    {
        try
        {
            _teams = null;
            _teams = await Api.GetAsync<string[]>("api/v1/teams");
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
    }

    private void CreateClicked()
    {
        _createRequested = true;
        _createModal?.Show();
    }
}
