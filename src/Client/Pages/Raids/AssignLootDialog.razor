@inject ApiClient Api

<MudDialog DisableSidePadding="true">
    <TitleContent>
        Assigning <ItemLink Id="Drop.ItemId" Bracketize="true" Colorize="true" LinkEnabled="true" PlaceholderText="Drop" />
    </TitleContent>
    <DialogContent>
        <ApiView Operation="_prioOperation" ExecuteImmediately="true">
            <MudList>
                @foreach (var prioGroup in _prioGroups)
                {
                    <MudListItem @key="prioGroup.Key ?? int.MinValue">
                        <div class="d-flex align-center">
                            @if (prioGroup.Key.HasValue)
                            {
                                @if (prioGroup.Count() > 1)
                                {
                                    <MudTooltip Text="Tied Priority">
                                        <MudAvatar Color="Color.Warning" Size="Size.Small">
                                            @prioGroup.Key
                                        </MudAvatar>
                                    </MudTooltip>
                                }
                                else
                                {
                                    <MudAvatar Color="Color.Success" Size="Size.Small">
                                        @prioGroup.Key
                                    </MudAvatar>
                                }
                            }
                            else
                            {
                                <MudAvatar Color="Color.Error" Size="Size.Small">
                                    X
                                </MudAvatar>
                            }
                            <div class="mr-auto">
                                @foreach (var context in prioGroup)
                                {
                                    <AssignLootDialogChip Context="context" />
                                }
                            </div>
                        </div>
                    </MudListItem>
                    <MudDivider />
                }
            </MudList>
        </ApiView>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="() => Dialog.Cancel()" Variant="Variant.Text">Cancel</MudButton>
    </DialogActions>
</MudDialog>

@code {
    private readonly List<IGrouping<int?, AssignEntryContext>> _prioGroups = new();
    private IApiClientOperation<IList<ItemPrioDto>> _prioOperation = null!;

    [CascadingParameter] MudDialogInstance Dialog { get; set; } = null!;

    [Parameter] public EncounterDropDto Drop { get; set; } = null!;

    [Parameter] public RaidDto Raid { get; set; } = null!;

    protected override void OnInitialized()
    {
        if (Dialog is null) throw new ArgumentNullException(nameof(Dialog));
        if (Drop is null) throw new ArgumentNullException(nameof(Drop));
        if (Raid is null) throw new ArgumentNullException(nameof(Raid));
        _prioOperation = Api.Drops.GetPriorityRankings(Drop.Id).OnSuccess(ConfigureRows);
    }

    private void ConfigureRows(IList<ItemPrioDto> prios)
    {
        _prioGroups.Clear();
        _prioGroups.AddRange(Raid.Attendees
            .Select(attendee => new AssignEntryContext(Raid, Drop, attendee, prios.FirstOrDefault(p => p.CharacterId == attendee.Character.Id)))
            .GroupBy(context => context.Prio)
            .OrderByDescending(g => g.Key));
    }
}