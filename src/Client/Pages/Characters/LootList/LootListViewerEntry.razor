@inject ApiClient Api
@inject ISnackbar Snackbar

<CascadingItemContext Id="Entry.ItemId">
    <div class="d-flex align-center">
        @if (Entry.Rank != 0)
        {
            <MudTooltip>
                <TooltipContent>
                    <div>
                        @if (Entry.Won)
                        {
                            <span>Item Won</span>
                        }
                        else
                        {
                            <div>Rank @Entry.Rank</div>
                            @foreach (var bonus in LootList.Bonuses.Concat(Entry.Bonuses))
                            {
                                <div>
                                    <PriorityBonusDisplay Bonus="bonus" />
                                </div>
                            }
                            @if (Entry.AutoPass)
                            {
                                <div>Automatically Passing</div>
                            }
                        }
                    </div>
                </TooltipContent>
                <ChildContent>
                    <MudAvatar Size="Size.Small" Class="mr-2" Color="Entry.Won ? Color.Success : Color.Info">
                        @if (Entry.Won)
                        {
                            <MudIcon Icon="@Icons.Material.Filled.Check" Size="Size.Small" />
                        }
                        else
                        {
                            @_prio
                        }
                    </MudAvatar>
                </ChildContent>
            </MudTooltip>
        }

        <MudAvatar Rounded Size="Size.Small" Class="mr-2">
            <ItemIcon Size="IconSize.Small" Width="24" Height="24" />
        </MudAvatar>

        <ItemLink Colorize Bracketize LinkEnabled PlaceholderText="@Entry.ItemName" Class="mr-2" />

        @if (!Entry.Won && Entry.Rank != 0 && Entry.AutoPass)
        {
            <AuthorizeView Resource="LootList.CharacterId" Policy="@(AppPolicies.CharacterOwner)">
                <Authorized>
                    <MudTooltip Text="Toggling this will make it appear as if you don't have this item on your loot list.">
                        <MudSwitch ReadOnly="_autoPassChanging" T="bool" Checked="Entry.AutoPass" CheckedChanged="SetAutoPassAsync" Label="Auto-Pass" Color="Color.Error" />
                    </MudTooltip>
                </Authorized>
                <NotAuthorized>
                    <MudText Color="Color.Info">Automatically Passing</MudText>
                </NotAuthorized>
            </AuthorizeView>
        }
    </div>
</CascadingItemContext>

@code {
    private int _prio;
    private bool _autoPassChanging;

    [Parameter] public LootListEntryDto Entry { get; set; } = null!;
    [Parameter] public LootListDto LootList { get; set; } = null!;

    protected override void OnParametersSet()
    {
        if (Entry is null) throw new ArgumentNullException(nameof(Entry));
        if (LootList is null) throw new ArgumentNullException(nameof(LootList));

        if (Entry.Rank != 0)
        {
            _prio = Entry.Rank;

            foreach (var bonus in LootList.Bonuses.Concat(Entry.Bonuses))
            {
                _prio += bonus.Value;
            }
        }
    }

    private async Task SetAutoPassAsync(bool autoPass)
    {
        try
        {
            _autoPassChanging = true;
            await Api.LootListEntries
                .AutoPass(Entry.Id, autoPass)
                .OnSuccess(_ => Entry.AutoPass = autoPass)
                .SendErrorTo(Snackbar)
                .ExecuteAsync();
        }
        finally
        {
            _autoPassChanging = false;
        }
    }
}
