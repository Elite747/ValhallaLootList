@inject ApiClient Api
@inject ISnackbar Snackbar

<CascadingItemContext Id="Entry.ItemId">
    <div class="d-flex align-center">
        @if (Entry.Won)
        {
            <MudBadge Overlap Left Icon="@Icons.Material.Filled.Check" Color="Color.Success">
                <MudAvatar Rounded="true" Class="mr-2">
                    <ItemIcon Size="IconSize.Medium" Width="40" Height="40" />
                </MudAvatar>
            </MudBadge>
        }
        else if (Entry.Rank != 0)
        {
            <MudTooltip>
                <TooltipContent>
                    <div>Rank @Entry.Rank</div>
                    @foreach (var bonus in LootList.Bonuses.Concat(Entry.Bonuses))
                    {
                        <div>
                            <PriorityBonusDisplay Bonus="bonus" />
                        </div>
                    }
                    @if (Entry.AutoPass)
                    {
                        <div>Automatically Passing</div>
                    }
                </TooltipContent>
                <ChildContent>
                    <MudBadge Overlap Left Content="_prio" Color="Color.Info">
                        <MudAvatar Rounded="true" Class="mr-2">
                            <ItemIcon Size="IconSize.Medium" Width="40" Height="40" />
                        </MudAvatar>
                    </MudBadge>
                </ChildContent>
            </MudTooltip>
        }
        else
        {
            <MudAvatar Rounded="true" Class="mr-2">
                <ItemIcon Size="IconSize.Medium" Width="40" Height="40" />
            </MudAvatar>
        }
        <div class="d-flex flex-column">
            <ItemLink Colorize Bracketize LinkEnabled PlaceholderText="@Entry.ItemName" />
            @if (!Entry.Won && Entry.Rank != 0)
            {
                <AuthorizeView Resource="LootList.CharacterId" Policy="@(AppPolicies.CharacterOwner)">
                    <Authorized>
                        <MudTooltip Text="Toggling this will make it appear as if you don't have this item on your loot list.">
                            <MudSwitch ReadOnly="_autoPassChanging" T="bool" Checked="Entry.AutoPass" CheckedChanged="SetAutoPassAsync" Label="Auto-Pass" Color="Color.Error" />
                        </MudTooltip>
                    </Authorized>
                    <NotAuthorized>
                        @if (Entry.AutoPass)
                        {
                            <MudText Color="Color.Info">Automatically Passing</MudText>
                        }
                    </NotAuthorized>
                </AuthorizeView>
            }
        </div>
    </div>
</CascadingItemContext>

@code {
    private int _prio;
    private bool _autoPassChanging;

    [Parameter] public LootListEntryDto Entry { get; set; } = null!;
    [Parameter] public LootListDto LootList { get; set; } = null!;

    protected override void OnParametersSet()
    {
        if (Entry is null) throw new ArgumentNullException(nameof(Entry));
        if (LootList is null) throw new ArgumentNullException(nameof(LootList));

        if (Entry.Rank != 0)
        {
            _prio = Entry.Rank;

            foreach (var bonus in LootList.Bonuses.Concat(Entry.Bonuses))
            {
                _prio += bonus.Value;
            }
        }
    }

    private async Task SetAutoPassAsync(bool autoPass)
    {
        try
        {
            _autoPassChanging = true;
            await Api.LootListEntries
                .AutoPass(Entry.Id, autoPass)
                .OnSuccess(_ => Entry.AutoPass = autoPass)
                .SendErrorTo(Snackbar)
                .ExecuteAsync();
        }
        finally
        {
            _autoPassChanging = false;
        }
    }
}
