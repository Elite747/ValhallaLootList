@attribute [Authorize(AppRoles.Administrator)]
@inject ApiClient Api
@inject NavigationManager Nav

<EditForm OnValidSubmit="OnSubmit" EditContext="_editContext">
    <DataAnnotationsValidator />
    <ProblemValidator @ref="_problemValidator" />

    <MudDialog>
        <DialogContent>
            <MudTextField Label="Name" For="() => _team.Name" @bind-Value="_team.Name" />

            @for (int i = 0; i < _team.Schedules.Count; i++)
            {
                var dayIndex = i;
                <MudGrid>
                    <MudItem>
                        <MudSelect Label="Day" @bind-Value="_team.Schedules[dayIndex].Day">
                            <MudSelectItem T="DayOfWeek?" Value="DayOfWeek.Sunday">Sun</MudSelectItem>
                            <MudSelectItem T="DayOfWeek?" Value="DayOfWeek.Monday">Mon</MudSelectItem>
                            <MudSelectItem T="DayOfWeek?" Value="DayOfWeek.Tuesday">Tue</MudSelectItem>
                            <MudSelectItem T="DayOfWeek?" Value="DayOfWeek.Wednesday">Wed</MudSelectItem>
                            <MudSelectItem T="DayOfWeek?" Value="DayOfWeek.Thursday">Thu</MudSelectItem>
                            <MudSelectItem T="DayOfWeek?" Value="DayOfWeek.Friday">Fri</MudSelectItem>
                            <MudSelectItem T="DayOfWeek?" Value="DayOfWeek.Saturday">Sat</MudSelectItem>
                        </MudSelect>
                    </MudItem>
                    <MudItem>
                        <MudTimePicker @bind-Time="_team.Schedules[dayIndex].StartTime" Label="Start Time" AmPm="true" />
                    </MudItem>
                    <MudItem>
                        <MudTextField @bind-Value="_team.Schedules[dayIndex].Duration" Label="Duration" Variant="Variant.Text" Adornment="Adornment.End" AdornmentText="hrs" />
                    </MudItem>
                    <MudItem>
                        <MudIconButton OnClick="() => RemoveScheduleClicked(dayIndex)" Icon="@Icons.Material.Filled.Remove" Color="Color.Error" />
                    </MudItem>
                </MudGrid>
            }
            <Microsoft.AspNetCore.Components.Forms.ValidationSummary />
        </DialogContent>
        <DialogActions>
            <MudButton OnClick="AddScheduleClicked" StartIcon="@Icons.Material.Filled.Add" Variant="Variant.Outlined" Color="Color.Success">
                Add Schedule
            </MudButton>
            <MudButton OnClick="() => Dialog.Cancel()" Variant="Variant.Text">Cancel</MudButton>
            <MudButton Color="Color.Primary" Variant="Variant.Filled" ButtonType="ButtonType.Submit">Submit</MudButton>
        </DialogActions>
    </MudDialog>
</EditForm>

@code {
    private ProblemValidator? _problemValidator;

    [CascadingParameter] MudDialogInstance Dialog { get; set; } = null!;

    protected override void OnParametersSet()
    {
        if (Dialog is null) throw new ArgumentNullException(nameof(Dialog));
    }
}
