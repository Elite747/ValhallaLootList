@inject ApiClient Api
@inject IDialogService DialogService
@inject ISnackbar Snackbar
@inject NavigationManager Nav 

@foreach (var kill in Raid.Kills)
{
    var localKill = kill;
    <MudCard Class="my-4" Elevation="3">
        <MudCardContent>
            <MudText Typo="Typo.h6">@kill.EncounterName</MudText>
            <MudText Typo="Typo.subtitle1">Killed by: @string.Join(", ", kill.Characters.Select(id => Raid.Attendees.Find(a => a.Character?.Id == id)?.Character?.Name).Where(str => str?.Length > 0).OrderBy(str => str))</MudText>
            <MudText Typo="Typo.subtitle1" GutterBottom="true">Recorded at @kill.KilledAt.ToLocalTime().ToString("t", CultureInfo.CurrentCulture)</MudText>
            @if (kill.Drops.All(drop => drop.WinnerId is null))
            {
                <AuthorizeLeaderView TeamId="@Raid.TeamId">
                    <MudButton Color="Color.Error" StartIcon="@Icons.Material.Filled.Delete" OnClick="() => DeleteAsync(localKill.EncounterId)">Delete</MudButton>
                </AuthorizeLeaderView>
            }
        </MudCardContent>
        <MudList>
            @foreach (var d in kill.Drops)
            {
                var drop = d;
                <MudDivider />
                <MudListItem Class="mud-list-item-clickable" Style="cursor: auto">
                    <div class="d-flex">
                        <MudAvatar Class="mr-5" Rounded="true">
                            <ItemIcon ItemId="drop.ItemId" Size="IconSize.Medium" width="40" height="40" />
                        </MudAvatar>
                        <div class="mr-auto">
                            <ItemLink LinkEnabled="true" Id="drop.ItemId" Colorize="true" Bracketize="true" OverrideText="@drop.ItemName">
                                <ItemLinkText />
                            </ItemLink>
                            <MudText Color="drop.WinnerId is null ? Color.Error : Color.Success" Inline="false">Awarded to @(drop.WinnerName ?? "nobody").</MudText>
                        </div>
                        <AuthorizeLeaderView TeamId="@Raid.TeamId">
                            @if (drop.WinnerId is null)
                            {
                                <MudButton OnClick="() => BeginAssignAsync(drop)" Variant="Variant.Text" Color="Color.Primary">Assign</MudButton>
                            }
                            else
                            {
                                <MudButton OnClick="() => AssignAsync(drop, null)" Variant="Variant.Text" Color="Color.Error">Unassign</MudButton>
                            }
                        </AuthorizeLeaderView>
                    </div>
                </MudListItem>
            }
        </MudList>
    </MudCard>
}

<AuthorizeLeaderView TeamId="@Raid.TeamId">
    <MudButton OnClick="AddClickedAsync"
               StartIcon="@Icons.Material.Filled.Add"
               Variant="Variant.Filled"
               Color="Color.Primary"
               Class="@(Raid.Kills.Count == 0 ? "mt-3" : null)">
        Add Kill
    </MudButton>

    @if (Raid.Kills.Count == 0)
    {
        <MudButton OnClick="DeleteRaidAsync"
                    StartIcon="@Icons.Material.Filled.Delete"
                    Variant="Variant.Filled"
                    Color="Color.Error"
                    Class="mt-3 ml-3">
            Delete Raid
        </MudButton>
    }
</AuthorizeLeaderView>

@code {
    [Parameter] public RaidDto Raid { get; set; } = null!;
}
