@page "/Characters/{character}"
@inject ApiClient Api

<ApiExecutor Operation="() => Api.Characters.Get(Character)" Context="character">
    <h1>
        @character.Name
        <RaceIcon Gender="character.Gender" Race="character.Race" Size="IconSize.Large" />
        <ClassIcon PlayerClass="character.Class" Size="IconSize.Large" />
    </h1>

    @if (character.TeamName?.Length > 0)
    {
        <h2><a href="teams/@character.TeamName">&lt;@character.TeamName&gt;</a></h2>
    }

    <ApiExecutor Operation="Api.GetPhaseConfiguration" Context="config">
        <ApiExecutor Operation="() => Api.LootLists.GetForCharacter(character.Id)" Context="lootLists">
            @{
                var phases = config.Brackets.Keys.Select(phase => (phase, phaseName: phase.ToString())).OrderBy(tuple => tuple.phase).ToList();

                if (string.IsNullOrEmpty(_selectedPhase) || !phases.Any(tuple => tuple.phaseName == _selectedPhase))
                {
                    (_, _selectedPhase) = phases.Find(tuple => tuple.phase == config.CurrentPhase);

                    if (string.IsNullOrEmpty(_selectedPhase))
                    {
                        (_, _selectedPhase) = phases.FirstOrDefault();
                    }
                }
            }
            <Tabs SelectedTab="@_selectedPhase" SelectedTabChanged="phase => _selectedPhase = phase">
                <Items>
                    @foreach (var (_, phaseName) in phases)
                    {
                        <Tab Name="@phaseName">
                            Phase @phaseName
                        </Tab>
                    }
                </Items>
                <Content>
                    @foreach (var (phase, phaseName) in phases)
                    {
                        <TabPanel Name="@phaseName">
                            <LootListView Character="@character" Phase="@phase" LootLists="lootLists" />
                        </TabPanel>
                    }
                </Content>
            </Tabs>
        </ApiExecutor>
    </ApiExecutor>
</ApiExecutor>

@code {
    [Parameter] public string Character { get; set; } = string.Empty;

    private string? _selectedPhase;
}
