<MudDialog>
    <DialogContent>
        <ApiView Operation="Operation">
            <CharacterPicker Characters="GetCharacters()" ShowAdd="ShowAdd" @bind-SelectedCharacter="_selectedCharacter" />
        </ApiView>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="() => Dialog.Cancel()" Variant="Variant.Text">Cancel</MudButton>
        <MudButton OnClick="() => Dialog.Close(DialogResult.Ok(_selectedCharacter))" Disabled="_selectedCharacter is null" Color="Color.Primary" Variant="Variant.Filled">Select</MudButton>
    </DialogActions>
</MudDialog>

@code {
    private CharacterDto? _selectedCharacter;

    [CascadingParameter] MudDialogInstance Dialog { get; set; } = null!;
    [Parameter] public IApiClientOperation<IList<CharacterDto>> Operation { get; set; } = null!;
    [Parameter] public Func<CharacterDto, bool>? Filter { get; set; }
    [Parameter] public bool ShowAdd { get; set; }

    protected override void OnParametersSet()
    {
        if (Dialog is null) throw new ArgumentNullException(nameof(Dialog));
        if (Operation is null) throw new ArgumentNullException(nameof(Operation));
    }

    private IList<CharacterDto> GetCharacters()
    {
        var characters = Operation.GetResult();

        if (Filter is not null)
        {
            return characters.Where(Filter).ToList();
        }

        return characters;
    }
}